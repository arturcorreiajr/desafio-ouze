pipeline{
    agent any

    stages {
        // Repositório onde o jenkins vai baixar os fontes do projejo na branch 'develop'
        stage('Get Source'){
            steps{
                git url: 'https://github.com/arturcorreiajr/desafio-ouze.git', branch: 'develop'
            }

        }
        // Construção da aplicação tasks-backend  (criação do arquivo .war do projeto)
        stage('Build Backend'){
            steps{
                script {
                    sh 'cd ..'
                    sh 'cd ./tasks-backend'
                    sh 'mvn clean package -DskipTests-true'
                }
            }
        }
        // Aplicação de testes unitários do projeto criado no passo anterior
        stage("Unit tests") {
            steps {
                sh 'mvn test'
            }
        }

        stage('Anchore analyse') {
            steps {
                writeFile file: 'anchore_images', text: "arturcorreiajunior/api1:${env.BUILD_ID}"
                anchore name: 'anchore_images'
            }
        }

        stage('SonarQube analysis') {
            environment{
                scannerHome = tool 'SONAR_SCANNER'
            }
            steps {
                // SONAR_LOCAL nome da instalação do sonnar no jenkins para análize posterior do Quality gate
                withSonarQubeEnv('SONAR_LOCAL') {
                    sh "${scannerHome}/bin/sonar-scanner -e -Dsonar.projectKey=DeployBack -Dsonar.host.url=http://localhost:9000 -Dsonar.login=hwt6h5w6t5h98th2h6w5th9w484265 -Dsonar.java.binaries=target -Dsonar.coverage.exclusions=**/.mvn/**.**/src/test/**,**/model/**,**Application.java"   
                }
            }
        }

        // Análize do Quality Gate
        stage("Quality Gate") {
            steps {
                sleep(10)
                timeout(time: 1, unit: 'MINUTES')
                waitForQualityGate abortPipeline: true
            }
        }
    

        // Faz o deploy da aplicação gerada nos estágios anteriores no Tomcat
        stage('Deploy'){
            steps{
                deploy adapters: [tomcat8(credentialsId: 'TomcatLogin', path:'', url: 'http://localhost:8001/')], contextPath: 'tasks-backend', war: 'target/tasks-backend.war'
            }
        }

    }

}